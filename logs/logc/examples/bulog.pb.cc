// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bulog.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "bulog.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace example {

namespace {

const ::google::protobuf::Descriptor* PlayerBrief_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlayerBrief_reflection_ = NULL;
const ::google::protobuf::Descriptor* BagChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BagChange_reflection_ = NULL;
const ::google::protobuf::Descriptor* BagChange_Change_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BagChange_Change_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* BagChange_ChangeReason_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EventType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_bulog_2eproto() {
  protobuf_AddDesc_bulog_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "bulog.proto");
  GOOGLE_CHECK(file != NULL);
  PlayerBrief_descriptor_ = file->message_type(0);
  static const int PlayerBrief_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBrief, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBrief, roleid_),
  };
  PlayerBrief_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PlayerBrief_descriptor_,
      PlayerBrief::default_instance_,
      PlayerBrief_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBrief, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBrief, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PlayerBrief));
  BagChange_descriptor_ = file->message_type(1);
  static const int BagChange_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagChange, change_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagChange, reason_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagChange, tag_),
  };
  BagChange_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BagChange_descriptor_,
      BagChange::default_instance_,
      BagChange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagChange, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagChange, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BagChange));
  BagChange_Change_descriptor_ = BagChange_descriptor_->nested_type(0);
  static const int BagChange_Change_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagChange_Change, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagChange_Change, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagChange_Change, change_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagChange_Change, orgv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagChange_Change, newv_),
  };
  BagChange_Change_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BagChange_Change_descriptor_,
      BagChange_Change::default_instance_,
      BagChange_Change_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagChange_Change, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagChange_Change, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BagChange_Change));
  BagChange_ChangeReason_descriptor_ = BagChange_descriptor_->enum_type(0);
  EventType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_bulog_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PlayerBrief_descriptor_, &PlayerBrief::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BagChange_descriptor_, &BagChange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BagChange_Change_descriptor_, &BagChange_Change::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_bulog_2eproto() {
  delete PlayerBrief::default_instance_;
  delete PlayerBrief_reflection_;
  delete BagChange::default_instance_;
  delete BagChange_reflection_;
  delete BagChange_Change::default_instance_;
  delete BagChange_Change_reflection_;
}

void protobuf_AddDesc_bulog_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013bulog.proto\022\007example\"+\n\013PlayerBrief\022\014\n"
    "\004name\030\001 \002(\t\022\016\n\006roleid\030\002 \002(\004\"\365\001\n\tBagChang"
    "e\022.\n\013change_list\030\001 \003(\0132\031.example.BagChan"
    "ge.Change\022/\n\006reason\030\002 \002(\0162\037.example.BagC"
    "hange.ChangeReason\022\013\n\003tag\030\003 \001(\t\032N\n\006Chang"
    "e\022\014\n\004type\030\001 \002(\005\022\n\n\002id\030\002 \001(\005\022\016\n\006change\030\003 "
    "\001(\005\022\014\n\004orgv\030\004 \001(\005\022\014\n\004newv\030\005 \001(\005\"*\n\014Chang"
    "eReason\022\r\n\tCR_CHARGE\020\001\022\013\n\007CR_SELL\020\002*\237\001\n\t"
    "EventType\022\r\n\tEVT_LOGIN\020\001\022\016\n\nEVT_LOGOUT\020\002"
    "\022\016\n\nEVT_CHARGE\020\003\022\022\n\016EVT_BAG_CHANGE\020\004\022\021\n\r"
    "EVT_JOIN_ARMY\020\005\022\021\n\rEVT_QUIT_ARMY\020\006\022\026\n\022EV"
    "T_REPORT_ONELINE\020\007\022\021\n\rEVT_DUMP_RANK\020\010", 477);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "bulog.proto", &protobuf_RegisterTypes);
  PlayerBrief::default_instance_ = new PlayerBrief();
  BagChange::default_instance_ = new BagChange();
  BagChange_Change::default_instance_ = new BagChange_Change();
  PlayerBrief::default_instance_->InitAsDefaultInstance();
  BagChange::default_instance_->InitAsDefaultInstance();
  BagChange_Change::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_bulog_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_bulog_2eproto {
  StaticDescriptorInitializer_bulog_2eproto() {
    protobuf_AddDesc_bulog_2eproto();
  }
} static_descriptor_initializer_bulog_2eproto_;
const ::google::protobuf::EnumDescriptor* EventType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EventType_descriptor_;
}
bool EventType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int PlayerBrief::kNameFieldNumber;
const int PlayerBrief::kRoleidFieldNumber;
#endif  // !_MSC_VER

PlayerBrief::PlayerBrief()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:example.PlayerBrief)
}

void PlayerBrief::InitAsDefaultInstance() {
}

PlayerBrief::PlayerBrief(const PlayerBrief& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:example.PlayerBrief)
}

void PlayerBrief::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roleid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PlayerBrief::~PlayerBrief() {
  // @@protoc_insertion_point(destructor:example.PlayerBrief)
  SharedDtor();
}

void PlayerBrief::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void PlayerBrief::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerBrief::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayerBrief_descriptor_;
}

const PlayerBrief& PlayerBrief::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bulog_2eproto();
  return *default_instance_;
}

PlayerBrief* PlayerBrief::default_instance_ = NULL;

PlayerBrief* PlayerBrief::New() const {
  return new PlayerBrief;
}

void PlayerBrief::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    roleid_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PlayerBrief::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:example.PlayerBrief)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_roleid;
        break;
      }

      // required uint64 roleid = 2;
      case 2: {
        if (tag == 16) {
         parse_roleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:example.PlayerBrief)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:example.PlayerBrief)
  return false;
#undef DO_
}

void PlayerBrief::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:example.PlayerBrief)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required uint64 roleid = 2;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roleid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:example.PlayerBrief)
}

::google::protobuf::uint8* PlayerBrief::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:example.PlayerBrief)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required uint64 roleid = 2;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roleid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:example.PlayerBrief)
  return target;
}

int PlayerBrief::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required uint64 roleid = 2;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->roleid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerBrief::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PlayerBrief* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PlayerBrief*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PlayerBrief::MergeFrom(const PlayerBrief& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PlayerBrief::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerBrief::CopyFrom(const PlayerBrief& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerBrief::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void PlayerBrief::Swap(PlayerBrief* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(roleid_, other->roleid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PlayerBrief::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlayerBrief_descriptor_;
  metadata.reflection = PlayerBrief_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* BagChange_ChangeReason_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BagChange_ChangeReason_descriptor_;
}
bool BagChange_ChangeReason_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const BagChange_ChangeReason BagChange::CR_CHARGE;
const BagChange_ChangeReason BagChange::CR_SELL;
const BagChange_ChangeReason BagChange::ChangeReason_MIN;
const BagChange_ChangeReason BagChange::ChangeReason_MAX;
const int BagChange::ChangeReason_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int BagChange_Change::kTypeFieldNumber;
const int BagChange_Change::kIdFieldNumber;
const int BagChange_Change::kChangeFieldNumber;
const int BagChange_Change::kOrgvFieldNumber;
const int BagChange_Change::kNewvFieldNumber;
#endif  // !_MSC_VER

BagChange_Change::BagChange_Change()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:example.BagChange.Change)
}

void BagChange_Change::InitAsDefaultInstance() {
}

BagChange_Change::BagChange_Change(const BagChange_Change& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:example.BagChange.Change)
}

void BagChange_Change::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  id_ = 0;
  change_ = 0;
  orgv_ = 0;
  newv_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BagChange_Change::~BagChange_Change() {
  // @@protoc_insertion_point(destructor:example.BagChange.Change)
  SharedDtor();
}

void BagChange_Change::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BagChange_Change::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagChange_Change::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BagChange_Change_descriptor_;
}

const BagChange_Change& BagChange_Change::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bulog_2eproto();
  return *default_instance_;
}

BagChange_Change* BagChange_Change::default_instance_ = NULL;

BagChange_Change* BagChange_Change::New() const {
  return new BagChange_Change;
}

void BagChange_Change::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BagChange_Change*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(type_, newv_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BagChange_Change::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:example.BagChange.Change)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // optional int32 id = 2;
      case 2: {
        if (tag == 16) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_change;
        break;
      }

      // optional int32 change = 3;
      case 3: {
        if (tag == 24) {
         parse_change:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &change_)));
          set_has_change();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_orgv;
        break;
      }

      // optional int32 orgv = 4;
      case 4: {
        if (tag == 32) {
         parse_orgv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &orgv_)));
          set_has_orgv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_newv;
        break;
      }

      // optional int32 newv = 5;
      case 5: {
        if (tag == 40) {
         parse_newv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &newv_)));
          set_has_newv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:example.BagChange.Change)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:example.BagChange.Change)
  return false;
#undef DO_
}

void BagChange_Change::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:example.BagChange.Change)
  // required int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional int32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // optional int32 change = 3;
  if (has_change()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->change(), output);
  }

  // optional int32 orgv = 4;
  if (has_orgv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->orgv(), output);
  }

  // optional int32 newv = 5;
  if (has_newv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->newv(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:example.BagChange.Change)
}

::google::protobuf::uint8* BagChange_Change::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:example.BagChange.Change)
  // required int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional int32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // optional int32 change = 3;
  if (has_change()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->change(), target);
  }

  // optional int32 orgv = 4;
  if (has_orgv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->orgv(), target);
  }

  // optional int32 newv = 5;
  if (has_newv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->newv(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:example.BagChange.Change)
  return target;
}

int BagChange_Change::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 change = 3;
    if (has_change()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->change());
    }

    // optional int32 orgv = 4;
    if (has_orgv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->orgv());
    }

    // optional int32 newv = 5;
    if (has_newv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->newv());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagChange_Change::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BagChange_Change* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BagChange_Change*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BagChange_Change::MergeFrom(const BagChange_Change& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_change()) {
      set_change(from.change());
    }
    if (from.has_orgv()) {
      set_orgv(from.orgv());
    }
    if (from.has_newv()) {
      set_newv(from.newv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BagChange_Change::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagChange_Change::CopyFrom(const BagChange_Change& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagChange_Change::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BagChange_Change::Swap(BagChange_Change* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(id_, other->id_);
    std::swap(change_, other->change_);
    std::swap(orgv_, other->orgv_);
    std::swap(newv_, other->newv_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BagChange_Change::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BagChange_Change_descriptor_;
  metadata.reflection = BagChange_Change_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BagChange::kChangeListFieldNumber;
const int BagChange::kReasonFieldNumber;
const int BagChange::kTagFieldNumber;
#endif  // !_MSC_VER

BagChange::BagChange()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:example.BagChange)
}

void BagChange::InitAsDefaultInstance() {
}

BagChange::BagChange(const BagChange& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:example.BagChange)
}

void BagChange::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  reason_ = 1;
  tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BagChange::~BagChange() {
  // @@protoc_insertion_point(destructor:example.BagChange)
  SharedDtor();
}

void BagChange::SharedDtor() {
  if (tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tag_;
  }
  if (this != default_instance_) {
  }
}

void BagChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BagChange_descriptor_;
}

const BagChange& BagChange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bulog_2eproto();
  return *default_instance_;
}

BagChange* BagChange::default_instance_ = NULL;

BagChange* BagChange::New() const {
  return new BagChange;
}

void BagChange::Clear() {
  if (_has_bits_[0 / 32] & 6) {
    reason_ = 1;
    if (has_tag()) {
      if (tag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        tag_->clear();
      }
    }
  }
  change_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BagChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:example.BagChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .example.BagChange.Change change_list = 1;
      case 1: {
        if (tag == 10) {
         parse_change_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_change_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_change_list;
        if (input->ExpectTag(16)) goto parse_reason;
        break;
      }

      // required .example.BagChange.ChangeReason reason = 2;
      case 2: {
        if (tag == 16) {
         parse_reason:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::example::BagChange_ChangeReason_IsValid(value)) {
            set_reason(static_cast< ::example::BagChange_ChangeReason >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_tag;
        break;
      }

      // optional string tag = 3;
      case 3: {
        if (tag == 26) {
         parse_tag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tag().data(), this->tag().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tag");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:example.BagChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:example.BagChange)
  return false;
#undef DO_
}

void BagChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:example.BagChange)
  // repeated .example.BagChange.Change change_list = 1;
  for (int i = 0; i < this->change_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->change_list(i), output);
  }

  // required .example.BagChange.ChangeReason reason = 2;
  if (has_reason()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->reason(), output);
  }

  // optional string tag = 3;
  if (has_tag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag().data(), this->tag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->tag(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:example.BagChange)
}

::google::protobuf::uint8* BagChange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:example.BagChange)
  // repeated .example.BagChange.Change change_list = 1;
  for (int i = 0; i < this->change_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->change_list(i), target);
  }

  // required .example.BagChange.ChangeReason reason = 2;
  if (has_reason()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->reason(), target);
  }

  // optional string tag = 3;
  if (has_tag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag().data(), this->tag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->tag(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:example.BagChange)
  return target;
}

int BagChange::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .example.BagChange.ChangeReason reason = 2;
    if (has_reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
    }

    // optional string tag = 3;
    if (has_tag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tag());
    }

  }
  // repeated .example.BagChange.Change change_list = 1;
  total_size += 1 * this->change_list_size();
  for (int i = 0; i < this->change_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->change_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagChange::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BagChange* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BagChange*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BagChange::MergeFrom(const BagChange& from) {
  GOOGLE_CHECK_NE(&from, this);
  change_list_.MergeFrom(from.change_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_reason()) {
      set_reason(from.reason());
    }
    if (from.has_tag()) {
      set_tag(from.tag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BagChange::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagChange::CopyFrom(const BagChange& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagChange::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->change_list())) return false;
  return true;
}

void BagChange::Swap(BagChange* other) {
  if (other != this) {
    change_list_.Swap(&other->change_list_);
    std::swap(reason_, other->reason_);
    std::swap(tag_, other->tag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BagChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BagChange_descriptor_;
  metadata.reflection = BagChange_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace example

// @@protoc_insertion_point(global_scope)
